#!/bin/bash

function whatis() {
	cuseco=$(basename $0)
    echo -e "\\033[38;5;118m${cuseco}	‚Üí \\033[38;5;11mtype:\\033[38;5;118mvio-bas-admin: ls clog maestro"
	echo -e "\\033[38;5;118m ‚áí  \\\033[38;5;195mLee la se√±al de \\033[38;5;228mtrue \\033[38;5;195m‚Üí ls current log.maestro 
	\033[38;5;11m¬ª con \\033[38;5;9mv option \\033[38;5;195m, aliasado a \\033[38;5;118mclomanov\\033[38;5;195m, le hace vim
	\033[38;5;11m¬ª con \\033[38;5;9mo option \\033[38;5;195m, aliasado a \\033[38;5;118mclomano \\033[38;5;195m, hace un select para vim other than el maestro now
\033[38;5;11m‚≠ê\\033[38;5;195m he aprendido que una variable que se crea en un alias, no es accesible por el mismo alias \\033[38;5;11m‚≠ê\\033[38;5;195m \\033[38;5;212m‚ù§Ô∏èÔ∏è \\n\\033[38;5;43m\tüëâ\t\033[38;5;11m${cuseco} -$o\033[0m"
}

## SOURCES 'S
##VARS-FILES 'B
##FUNCTIONS 'F
source Opte.fu
source Asksure.fu
##DIRECTORIES 'D
##FILES 'I
#VARIABLES 'V
vimit=false
othi=false

while getopts ":ehvo" o; do
	case ${o} in
		e)
			opte
			exit
			;;
		h)
			whatis
			exit
			;; # 'O
		v) 
			vimit=true
			;;
		o)
			othi=true
			;;
		?)
			echo -e "Nein nein nein option ‚Üí ${o}"
			exit
			;;
	esac
    
done
shift $((OPTIND-1))

### MAIN 
wmaf=`sed -ne "25,32p" /Users/violetagonzalezgarcia/gitclones/.bashrc | grep true | sed -ne "s/=true//p"`
if [[ $wmaf =~ "ystpelectricity" ]]; then
	wmaf='ystp-electricity'
elif [[ $wmaf =~ "docspersonalesyrepasos" ]]; then
	wmaf='docs-personales-y-repasos'
elif [[ $wmaf =~ "extendother" ]]; then 
	wmaf='extend-other'
fi

if [[ ${othi} = true ]]; then
	select wmaf in $(find /Users/violetagonzalezgarcia/gitclones/.clogs/maestros -name "*.log.maestro" -exec basename {} \; )
	do
		vim /Users/violetagonzalezgarcia/gitclones/.clogs/maestros/$wmaf
		break
	done
	exit
fi	

if [[ ${vimit} = true ]]; then
    vim /Users/violetagonzalezgarcia/gitclones/.clogs/maestros/$wmaf.log.maestro
else
	ls /Users/violetagonzalezgarcia/gitclones/.clogs/maestros/$wmaf.log.maestro
fi
