#!/bin/bash

function lpinstructions() {
	echo -e "\033[38;5;190m\tü§ó manual ü™ó ‚Üí \033[38;5;118m lp2 ${porarriba} ‚Üí 
	\t‚Üí \033[38;5;195mPRINTED tocho ${porarriba} ‚Üí voltear üëã cada p√°gina del tocho, formando un nuevo tocho en el que los folios est√°n en el mismo √≥rden, pero con las caras al rev√©s
	üî•üî•üî•üî•üî•üî•üî•üî•üî• ‚Üí y \033[38;5;118m lp2 ${porabajo}" 
}
function whatis() {
	cuseco=$(basename $0)
	echo -e "\033[38;5;118m${cuseco} ‚áí  \033[38;5;11mtype:\033[38;5;118mvio-admin ‚áí  if convert for if pdftk one-off-boolean echo lp instructions" 
	echo -e "\033[38;5;195m\t‚àô Recorro las p√°ginas de un pdf con un for  \033[38;5;11m‚≠ê y declaro una variable ü™ó acorde√≥n que acordeonea cada 4 \033[38;5;195m tal que puedo aplicar un test de 2 y 2 continuadamente  
	\033[38;5;118m‚òÖ \033[38;5;9moption noption \033[38;5;195mde momento... üöÅ  
	\033[38;5;43m\tüëâ\t\033[38;5;11m${cuseco} -$o\033[0m
	\033[38;5;11m‚òÖ \033[38;5;228mlp instructions ‚Üí " 
	lpinstructions
	return 25
}

source Asksure.fu
source Opte.fu
source Continua.fu
source Echocolors.fu # black red green yellow blue magenta cyan white pink orange whiteguay @+N

while getopts ":eh" o; do
	case "${o}" in
		e)
			opte
			exit
			;;
		h)
			whatis 2>/dev/null
			[[ "$?" == 25  ]] || echo -e "PENDING whatis!! üî• "
			exit
			;;
		\?)
			echo "invalid option: -$OPTARG"
			exit
			;;
	esac
done
shift $((OPTIND-1))


#pdf="dimensionado-pvsol.pdf"
pdf=$(read -p "el pdf ‚Üí ")
porarriba="${pdf%.pdf}-arriba.pdf"  
porabajo="${pdf%.pdf}-abajo.pdf"  
tmppdf="tmppdf.pdf"
#nofp=54
nofp=$(nppdf ${pdf}) 

[[ ! -e ${porarriba} ]] && convert xc:none ${porarriba} 
[[ ! -e ${porabajo} ]] && convert xc:none ${porabajo} 

removefirstarriba=true
removefirstabajo=true

#est√° la opci√≥n la acordeon empieza en 0, y crece un paso despu√©s que la recorriente al comienzo del recorrido; aqu√≠ el acorde√≥n lo hace cuando la recorriente ya ha saltado al nuevo ciclo
#otra opci√≥n es empezar con la acorde√≥n igual que la recorriente. Entonces la acorde√≥n crece al final de las instrucciones correspondientes a la recorriente. Y el ciclo acorde√≥nico, se realiza TAMBI√âN al final del paso de recorrido. ESTA ES LA QUE M√ÅS GRADO DE CORRESPONDENCIA TIENE

let yesprint=1
for p in $(seq ${nofp})
do
	if (( ${yesprint} <= 2 )); then
	   pdftk ${pdf} cat ${p} output arriba_${p}
	   pdftk ${porarriba} arriba_${p} output ${tmppdf} 
	   [[ ${removefirstarriba} = true ]] &&  pdftk ${tmppdf} cat 2 output ${porarriba} && removefirstarriba=false && continue 
	   mv ${tmppdf} ${porarriba}
    elif (( ${yesprint} > 2  && ${yesprint} <= 4 )); then
	   pdftk ${pdf} cat ${p} output abajo_${p}
	   pdftk ${porabajo} abajo_${p} output ${tmppdf} 
	   [[ ${removefirstabajo} = true ]] &&  pdftk ${tmppdf} cat 2 output ${porabajo} && removefirstabajo=false && continue 
	   mv ${tmppdf} ${porabajo}
	fi
	[[ ${yesprint} == 4 ]] && let yesprint=${yesprint}-4 
	let yesprint=${yesprint}+1 
done
lpinstructions
