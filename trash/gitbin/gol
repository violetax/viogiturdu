#!/bin/bash

function whatis() {
	cuseco=$(basename $0)
 echo -e "\e[38;5;118m${cuseco}	‚áí 	\\e[38;5;11mtype:\\e[38;5;118mgeus ‚Üí vim ‚áí  select, array con mapfile, SECONDS var, log function"
echo -e "	\\e[38;5;195m Select an audio from geus playsists.., and [38;5;118mdo[38;5;11m ‚≠ê[38;5;118mit!!!  \\e[38;5;212m‚ù§Ô∏èÔ∏è \\n\\e[38;5;43m\tüëâ\t\e[38;5;11m${cuseco} -$o\e[0m
    "
}

## SOURCES
# FUNCTIONS
source Opte.fu
source Asksure.fu
source GralGetops.fu # snippet ‚Üí sops
source Logtime.fu 

gvallwaysfile=/home/violeta/bin/geush/auxiliares/vallways/geus-vallways.aux
source ${gvallwaysfile} 
source ${funcsdir}/echonthego.fu
source ${funcsdir}/editvlcrc.fu
source ${funcsdir}/erabaki_hizkuntza.fu

gvonthegofile=/home/violeta/bin/geush/auxiliares/vonthego/geus-vonthego.aux
source ${gvonthegofile}  

erabaki_hizkuntza
getvlcspeed


##DIRECTORIES
##FILES
tlogfile=${transdir}/.transcripciones.log
tralogfile="${transdir}/${clipname%.mp3}.transcript"
#refdatefile...
#VARIABLES
myspeed=false

### MAIN
while getopts ":ehs" o; do 
	    case "${o}" in
        e)
            opte
            exit
            ;;
        h)
            #whatis
            echo -e "PENDING whatis!! üî• "
            exit
            ;;
        s)
            editvlcspeed 
            ;;
        \?)
            echo "invalid option: -$OPTARG"
            exit
            ;;
    esac
done
shift $((OPTIND-1))

#si no hay option s, aplicar la funct editspeed con $1==1
#[[ ${myspeed} = false ]] && editspeed 1

mapfile -t playlists < <( find ${playldir}/pl-listen* -exec basename {} \; | sort -r ) # -type f -newer ${refdatefile}... 

echo -e "\e[38;5;212m‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è \\e[38;5;11m‚ù§Ô∏èÔ∏è \\e[38;5;212m Happy \\e[38;5;195m L\\e[38;5;11m ‚≠ê \\e[38;5;195m I\\e[38;5;11m ‚≠ê \\e[38;5;195m S\\e[38;5;11m ‚≠ê \\e[38;5;195m T\\e[38;5;11m ‚≠ê \\e[38;5;195m E\\e[38;5;11m ‚≠ê \\e[38;5;195m N\\e[38;5;11m ‚≠ê \\e[38;5;195m I\\e[38;5;11m ‚≠ê \\e[38;5;195m N\\e[38;5;11m ‚≠ê \\e[38;5;195m G !!!!!!!!!!!!"
#echo -e "\e[38;5;212m‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è \\e[38;5;9m‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è \\e[38;5;212m‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è \\e[38;5;190m‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è !!!!!!!!\\e[38;5;9m‚ù§Ô∏èÔ∏è \\e[38;5;212m‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è ‚ù§Ô∏èÔ∏è \\e[38;5;11m‚ù§Ô∏èÔ∏è  \\e[38;5;190m"    

echo -e ""
#echo -e "\e[38;5;9m‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠êSUPER \\e[38;5;118mPENDING \\e[38;5;11m!!!!!!!!\\e[38;5;14m‚Üí \\e[38;5;195m EL LOG DE LISTENIG ES OTRO, DONDE SE COPIA EL DICT TRANSCRIPT, Y LO EDITO, PARA EN EL FUTURO \\e[38;5;118m cmp dict.log lis.log \\e[38;5;195m Y REGISTRAR LO QUE CAMBIO!!!!!! "        

COLUMNS=12
echo -e "\e[38;5;195m üëâ velocity üö®üö¶üö®üö¶üö®üö¶üö®üö¶üö®üö¶üö®üö¶ üëâ üëâ üëâ üëâ  \e[38;5;118m${vlcspeed} \e[38;5;195m "
select golaudio in $(echo -e "${playlists[@]}")
do
	echo -e "\e[38;5;14m"  
	tail -1 ${playldir}/${golaudio} 
    if asksure; then
		SECONDS=0
		nvlc ${playldir}/${golaudio} 
		#FILE=${playldir}/${transcript} 

		logtime ${SECONDS}
		dtime=$(logtime ${SECONDS})
		#echo -e "TLOG ${golaudio} ‚ú® $(date +%D) ‚Üí ${dtime}" > ${tlogfile}
		#echo -e "\e[38;5;195m TLOG \\e[38;5;14m¬ª\\e[38;5;118m${golaudio} \\e[38;5;11m‚ú® \\e[38;5;195m $(date +%D) ‚Üí ${dtime}" 
		#echo -e "\e[38;5;212mWrite a comment????"
		commentwork "${golaudio}" "${dtime}" "${tlogfile}"
		[[ -e "${tralogfile}" ]] && echo "üí´ See typed transcript @ ${tralogfile} ‚≠ê ‚≠ê ‚≠ê " >> ${tlogfile}
	fi
	echo -e "\e[38;5;11müí´ \\e[38;5;118mAGUR!!!!!!!!!!!!!!!!\\e[38;5;11m üí´"
	exit
done
# ‚ú® 
