#!/bin/bash

function whatis() {
	cuseco=$(basename $0)
 echo -e "\e[38;5;118m${cuseco}	‚áí 	\\e[38;5;11mtype:\\e[38;5;118mgeus ‚Üí vim ‚áí  select, array con mapfile, SECONDS var, log function"
 echo -e "\e[38;5;195m Select an audio from geus playsists.., and [38;5;118mdo[38;5;11m ‚≠ê[38;5;118mit!!!  \\e[38;5;212m‚ù§Ô∏èÔ∏è \\n\\e[38;5;43m\tüëâ\t\e[38;5;11m${cuseco} -$o\e[0m
    "
}

## SOURCES
source Opte.fu
source Asksure.fu
source GralGetops.fu # snippet ‚Üí sops
source Logtime.fu 

gvallwaysfile=/home/violeta/bin/geush/auxiliares/vallways/geus-vallways.aux
source ${gvallwaysfile}
source ${funcsdir}/echonthego.fu
source ${funcsdir}/editvlcrc.fu
source ${funcsdir}/erabaki_hizkuntza.fu
gvonthegofile=/home/violeta/bin/geush/auxiliares/vonthego/geus-vonthego.aux
source ${gvonthegofile}


erabaki_hizkuntza
getvlcspeed

##DIRECTORIES
##FILES
tlogfile=${transdir}/.transcripciones.log
tralogfile="${transdir}/${clipname%.mp3}.transcript"
#refdatefile...
#VARIABLES
myspeed=false


### MAIN
while getopts ":ehs" o; do 
	case "${o}" in
		e)
			opte
			exit
			;;
		h)
			#whatis
			echo -e "PENDING whatis!! üî• "
			exit
			;;
		s)
			editvlcspeed 
			;;	
		\?)
			echo "invalid option: -$OPTARG"
			exit
			;;
	esac
done
shift $((OPTIND-1))

#si no hay option s, aplicar la funct editspeed con $1==1
#[[ ${myspeed} = false ]] && editspeed 1 

mapfile -t playlists < <( find ${playldir}/pl-dictation* -exec basename {} \; | sort -r) # -type f -newer ${refdatefile}... 

echo -e "\e[38;5;212müíïüíïüíïüíïüíï Happy \\e[38;5;195m manual writing!!!!!!!!!!!!"
echo -e "\e[38;5;212müíïüíïüíïüíïüíï\\e[38;5;195m or typing \\e[38;5;212müíïüíïüíï\\e[38;5;190müíïüíïüíïüíïüíï\\e[38;5;212müíïüíïüíï!!!!!!!!\\e[38;5;190m"    
echo -e "\e[38;5;195m For T \\e[38;5;11m‚≠ê \\e[38;5;195m Y\\e[38;5;11m‚≠ê\\e[38;5;195m P\\e[38;5;11m‚≠ê\\e[38;5;195m I\\e[38;5;11m‚≠ê\\e[38;5;195m N\\e[38;5;11m‚≠ê\\e[38;5;195m G  Open another tab... ponte c√≥moda, and \\e[38;5;118mRUN \\e[38;5;9mrtra \e[0m"

COLUMNS=12
echo -e "\e[38;5;195m üëâ speed üö®üö¶üö®üö¶üö®üö¶üö®üö¶üö®üö¶üö®üö¶ üëâ üëâ üëâ üëâ \e[38;5;118m${vlcspeed} \e[38;5;195m " 
select godaudio in $(echo -e "${playlists[@]}" )
do
	echo -e "\e[38;5;14m"  
	tail -1 ${playldir}/${godaudio} 
    if asksure; then
		SECONDS=0
		nvlc ${playldir}/${godaudio} 
		#FILE=${playldir}/${transcript} 
		dtime=$(logtime ${SECONDS})
		#echo -e "TLOG ${godaudio} ‚ú® $(date +%D) ‚Üí ${dtime}" > ${tlogfile}
		#echo -e "\e[38;5;195m TLOG \\e[38;5;14m¬ª\\e[38;5;118m${godaudio} \\e[38;5;11m‚ú® \\e[38;5;195m $(date +%D) ‚Üí ${dtime}" 
		#echo -e "\e[38;5;212mWrite a comment????"
		commentwork "${godaudio}" "${dtime}" "${tlogfile}"
			[[ -e "${tralogfile}" ]] && echo "üí´ See typed transcript @ ${tralogfile} ‚≠ê ‚≠ê ‚≠ê " >> ${tlogfile}
	fi
	echo -e "\e[38;5;11müí´ \\e[38;5;118mAGUR!!!!!!!!!!!!!!!!\\e[38;5;11m üí´"
	break
done
# ‚ú® 
