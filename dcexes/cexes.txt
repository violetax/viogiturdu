Capítulo III
Ejercicio 00 : ft_putchar
Ejercicio: 00
ft_putchar
Directorio de entrega: ex00/
Archivos a entregar: ft_putchar.c
Funciones autorizadas: write

• Escribe una función que muestre el carácter usado como parámetro.
• El prototipo de la función deberá ser el siguiente:
void ft_putchar(char c);

Para mostrar el carácter, tendras que utilizar la función write de la siguiente forma.
write(1, &c, 1);

7

hastaaqui
Capítulo IV
Ejercicio 01 : ft_print_alphabet
Ejercicio: 01
ft_print_alphabet
Directorio de entrega: ex01/
Archivos a entregar: ft_print_alphabet.c
Funciones autorizadas: write

• Escribe una función que muestre el alfabeto en minúsculas en una sola línea, en
orden creciente, empezando en la letra “a”.
• El prototipo de la función deberá ser el siguiente:
void ft_print_alphabet(void);

8

hastaaqui
Capítulo V
Ejercicio 02 :
ft_print_reverse_alphabet
Ejercicio: 02
ft_print_reverse_alphabet
Directorio de entrega: ex02/
Archivos a entregar: ft_print_reverse_alphabet.c
Funciones autorizadas: write

• Escribe una función que muestre el alfabeto en minúsculas en una sola línea, en
orden decreciente, empezando en la letra “z”.
• El prototipo de la función deberá ser el siguiente:
void ft_print_reverse_alphabet(void);

9

hastaaqui
Capítulo VI
Ejercicio 03 : ft_print_numbers
Ejercicio: 03
ft_print_numbers
Directorio de entrega: ex03/
Archivos a entregar: ft_print_numbers.c
Funciones autorizadas: write

• Escribe una función que muestre, en una sola línea y en orden creciente, todos los
dígitos.
• El prototipo de la función deberá ser el siguiente:
void ft_print_numbers(void);

10

hastaaqui
Capítulo VII
Exercise 04 : ft_is_negative
Ejercicio: 04
ft_is_negative
Directorio de entrega: ex04/
Archivos a entregar: ft_is_negative.c
Funciones autorizadas: write

• Escribe una función que muestre “N” o “P” en función del signo del entero que se
haya usado como parámetro. Si n es negativo muestra “N”. Si n es positivo o nulo
muestra “P”.
• El prototipo de la función deberá ser el siguiente:
void ft_is_negative(int n);

11

hastaaqui
Capítulo VIII
Ejercicio 05 : ft_print_comb
Ejercicio: 05
ft_print_comb
Directorio de entrega: ex05/
Archivos a entregar: ft_print_comb.c
Funciones autorizadas: write

• Escribe una función que muestre, en orden creciente, todas las combinaciones posibles de tres dígitos distintos en orden creciente -sí, la repetición es voluntaria.
• El resultado es algo parecido a esto:
$>./a.out | cat -e
012, 013, 014, 015, 016, 017, 018, 019, 023, ..., 789$>

• 987 no está porque 789 ya existe
• 999 no está porque este número no contiene exclusivamente dígitos distintos
• El prototipo de la función deberá ser el siguiente:
void ft_print_comb(void);

12

hastaaqui
Capítulo IX
Ejercicio 06 : ft_print_comb2
Ejercicio: 06
ft_print_comb2
Directorio de entrega: ex06/
Archivos a entregar: ft_print_comb2.c
Funciones autorizadas: write

• Escribe una función que muestre todas las combinaciones posibles de dos números
entre 0 y 99, en orden creciente.
• El resultado es algo parecido a esto:
$>./a.out | cat -e
00 01, 00 02, 00 03, 00 04, 00 05, ..., 00 99, 01 02, ..., 97 99, 98 99$>

• El prototipo de la función deberá ser el siguiente:
void ft_print_comb2(void);

13

hastaaqui
Capítulo X
Ejercicio 07 : ft_putnbr
Ejercicio: 07
ft_putnbr
Directorio de entrega: ex07/
Archivos a entregar: ft_putnbr.c
Funciones autorizadas: write

• Escribe una función que muestre el número que se ha usado como parámetro. La
función deberá ser capaz de mostrar todos los valores posibles en una variable de
tipo int.
• El prototipo de la función deberá ser el siguiente:
void ft_putnbr(int nb);

• Por ejemplo:
◦ ft_putnbr(42) muestra "42".

14

hastaaqui
Capítulo XI
Ejercicio 08 : ft_print_combn
Ejercicio: 08
ft_print_combn
Directorio de entrega: ex08/
Archivos a entregar: ft_print_combn.c
Funciones autorizadas: write

• Escribe una función que muestre todas las combinaciones de n dígitos en orden
creciente.
• n será tal que: 0 <n <10.
• Si n = 2, el resultado es algo parecido a esto:
$>./a.out | cat -e
01, 02, 03, ..., 09, 12, ..., 79, 89$>

• El prototipo de la función deberá ser el siguiente:
void ft_print_combn(int n);

15


